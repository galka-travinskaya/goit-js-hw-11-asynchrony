{"version":3,"sources":["js/01-timeout.js","../node_modules/parcel-bundler/src/builtins/bundle-url.js","../node_modules/parcel-bundler/src/builtins/css-loader.js"],"names":["logger","time","console","log","timerId","setTimeout","shouldCencelTimer","Math","random","clearTimeout","bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","url","replace","exports","bundle","require","updateLink","link","newLink","cloneNode","onload","remove","href","split","Date","now","parentNode","insertBefore","nextSibling","cssTimeout","reloadCSS","links","document","querySelectorAll","i","length","module"],"mappings":"ACAA,ACAA,IDAIU,ACAAY,MAAM,GDAG,ACAAC,GDAG,IAAhB,ACAoB,CAAC,cAAD,CAApB;;ADCA,ACCA,AFFA,SCCSZ,ACCAa,UAAT,CAAoBC,IAApB,EAA0B,CDD1B,GAA8B;AAC5B,ACCA,MDDI,ACCAC,CDDChB,MCCM,GDDX,ACCce,EDDE,ECCE,CAACE,SAAL,EAAd;ADAEjB,ADDJ,ICCIA,SAAS,GAAGE,YAAY,EAAxB;AACD,ACADc,AFDF,EECEA,OAAO,CAACE,MAAR,GAAiB,YAAY;AAC3BH,AFDJ,IECIA,IAAI,CAACI,MAAL;ADCF,ACAC,AFAH,GEFE,MDEOnB,SAAP;AACD,ADCD;AEDEgB,AFEF,EEFEA,OAAO,CAACI,IAAR,GAAeL,IAAI,CAACK,IAAL,CAAUC,KAAV,CAAgB,GAAhB,EAAqB,CAArB,IAA0B,GAA1B,GAAgCC,IAAI,CAACC,GAAL,EAA/C;ADEF,ACDER,AFEF,EEFEA,IAAI,CAACS,EDCEtB,QCDP,CAAgBuB,GDClB,GAAwB,MCDtB,CAA6BT,OAA7B,EAAsCD,IAAI,CAACW,WAA3C;ADEA,ACDD,AFED;ACAE,ADCF,MCDM;AACF,ACDJ,AFEA,IEFIC,MDCM,IAAIxB,ACDA,GAAG,EDCP,EAAN,ACDJ;ADEG,ADCH,GCHE,CAEE,OAAOC,GAAP,EAAY;AACZ,ACFJ,AFGA,QCDQC,CCFCuB,MDEM,GAAG,ACFlB,CDEmB,ECFE,GDEGxB,GAAG,CAACE,KAAV,EAAiBC,KAAjB,CAAuB,+DAAvB,CAAd;ACDF,AFIF,MEJMoB,UAAJ,EAAgB;ADEd,ACDA,AFIJ,QCHQtB,OAAJ,EAAa;AACX,ACDH,AFIH,aCHaG,UAAU,CAACH,OAAO,CAAC,CAAD,CAAR,CAAjB;AACD,ADIL;ACHG,ACDDsB,EAAAA,UAAU,GAAGhC,UAAU,CAAC,YAAY;AAClC,AFMJ,QENQkC,KAAK,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,wBAA1B,CAAZ;ADEF,ADKF,SCLS,GAAP;AACD,ACFG,AFOJ,SEPS,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAAK,CAACI,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,AFQN,IAAM1C,MERIsB,AFQE,GAAG,GERC,CAACJ,KFQXlB,KERI,CAAkBuC,AFQb,CAAAtC,IERkB,AFQd,CEReyC,CAAD,AFQV,CERK,CAASZ,IAA3B,MAAqCR,MAAM,CAACV,YAAP,EAAzC,EAAgE;ADGtE,ACFQY,AFQJtB,EAAAA,MERIsB,CDECN,ADME,CAACf,GAAR,KERc,CDElB,ACFmBoC,CDECpB,GAApB,CCFwB,CDEC,ACFAuB,CAAD,CAAN,CAAV,8CFQqBzC,IAAzB;ACLF,ACFK,AFQN,CAFD,QCJS,CAAC,KAAKkB,GAAN,EAAWC,OAAX,CAAmB,sEAAnB,EAA2F,IAA3F,IAAmG,GAA1G;AACD,ACFI;AFSL,IAAMhB,OAAO,GAAGC,UAAU,CAACL,MAAD,EAAS,IAAT,EAAe,IAAf,CAA1B;ACLAqB,ACFIgB,AFSJ,IETIA,AFSE/B,GCPC,CAACM,MCFM,GAAG,GDEjB,CCFI,AFSmB,ECPAD,CDOGJ,IAAI,CAACC,MAAL,KAAgB,CCP1C,EDOA;ACNAa,ACFG,AFSHnB,GElByB,EASpB,EDEE,ACXkB,AFkBlB,CCPCgB,ACXN,AFkBMf,GAAR,CAAYG,MCPZ,GAAqBY,QDOrB,ECPA;ACDC;AFUD,IAAGZ,iBAAH,EAAsB;AERtBsC,AFSInC,EAAAA,IETE,CAACY,OAAP,AFSgB,CAACjB,EETAkC,KFSD,CAAZ,GETJ;AFUC","file":"01-timeout.81fec98c.js","sourceRoot":"..\\src","sourcesContent":["import '../css/common.css';\r\n\r\n/*\r\n * Метод window.setTimeout(callback, delay, args)\r\n */\r\n\r\n// console.log('До вызова setTimeout');\r\n\r\n// setTimeout(\r\n//     // аргумент ->\r\n//     x => {\r\n//         console.log(x);\r\n//   console.log('1 - Внутри callback для setTimeout');\r\n// }, 2000, \r\n// // аргумент ->\r\n// 5);\r\n\r\n// setTimeout(() => {\r\n//   console.log('2 - Внутри callback для setTimeout');\r\n// }, 1000);\r\n\r\n// console.log('После вызова setTimeout');\r\n\r\n\r\n/*\r\n * Очистка таймаута с clearTimeout(timeoutId)\r\n */\r\n\r\nconst logger = time => {\r\n    console.log(`Лог через ${time}ms, потому что не отменили таймаут`);\r\n}\r\n\r\nconst timerId = setTimeout(logger, 2000, 2000);\r\n\r\nconst shouldCencelTimer = Math.random() > 0.3;\r\nconsole.log(shouldCencelTimer);\r\n\r\nif(shouldCencelTimer) {\r\n    clearTimeout(timerId);\r\n}","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n"]}